version: "3.3"

services:
  postgres:
    image: postgres:alpine
    restart: always
    container_name: odds_db
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - '${POSTGRES_EXTERNAL_PORT:-5432}:5432'

  redis:
    image: 'redis:alpine'
    restart: always
    container_name: odds_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:?err}
    env_file:
      - .env
    volumes:
      - redis-data:/data
    hostname: '${REDIS_HOST:-redis}'
    expose:
      - "${REDIS_PORT:-6379}"

  scrapy-splash:
    image: scrapinghub/splash
    container_name: odds_scrapy_splash
    expose:
      - "${SCRAPY_SPLASH_PORT:-8050}"

  scrapyd:
    build: ./scraper
    container_name: odds_crawler
    command: scrapyd
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${SCRAPYD_PORT:-6800}:6800"
    links:
      - redis:redis
      - postgres:postgres
      - scrapy-splash:scrapy-splash
    tty: true
    stdin_open: true
    dns:
      - 8.8.8.8
    depends_on:
      - postgres
      - redis
      - scrapy-splash

  web:
    container_name: odds_web
    build: ./web
    entrypoint: ./web-runner.sh
    env_file:
      - .env
    volumes:
      - static:/web/static
    links:
      - postgres:postgres
    expose:
      - "8002"
    depends_on:
      - postgres

  celery:
    container_name: odds_celery
    build: ./web
    command: celery -A tasks worker -c 40 -B
    volumes:
      - static:/web/static
    env_file:
      - .env
    links:
      - redis:redis
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: odds_nginx
    ports:
      - "${EXTERNAL_PORT:-8010}:80"
    volumes:
      - ./web/static/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - .env
    links:
      - web:web
      - scrapyd:scrapyd
    depends_on:
      - web
      - scrapyd

volumes:
  postgres-data:
  redis-data:
  static:
